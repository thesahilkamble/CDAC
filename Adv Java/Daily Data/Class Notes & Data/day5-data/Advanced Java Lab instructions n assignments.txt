Day 1
1. Refer - "day1-data\help\day1_help\JavaEE_help\Steps.txt"
Access Apache tomcat - from g drive - "Web Server n Java EE docs\apache-tomcat-9.0.76.zip" 

Confirm first 
JDK version : JDK 11
IDE : Eclipse STS 3.9.18
1. Create new workspace
2. Change perspective to Java EE 
3. Delete earlier web server.
4. Add Apache tomcat (9.0.76) in IDE.
5. Create dynamic web project n test welcome page(HTML contents)
6. Extract Java EE docs from : "day1_help\JavaEE_help\Web Server n Java EE docs\javaee-api-8.0-javadoc.jar"
7. In index.html , add a link to test the servlet , deployed using annotations
(Servlet1)
Confirm complete servlet life cycle (init , service , destroy)
(by printing messages on the server console)

8. Revise JDBC , using JDBC demo.
9. If possible start building the DAO , Entities n DBUtils for online voting case study, with the help of lab faculty.
refer -"case studies\voting assignment.png"
You can test this DAO layer using Tester (main based app)
We will integerate it with Servlets tomorrow.


8. In index.html , add another link to test the servlet , deployed using xml tags
Copy Servlet1 into Servlet2 (make some changes in the print statements)
Confirm complete servlet life cycle again

9. Let's start solving online voting case study

9.1 Voter authentication
i/p : email , password

Day 2

1. import day2.1 , in the Java EE workspace
Correct Build path errors if any !
Edit DBUtils , as per your DB settings.

1.1 Revise the flow of Online voting , completed so far.
(from login.html till Candidate List page)
Use inspect option (client side debugging) for BEST clarity.

1.2 Revise cookie based state management(session tracking) n test it.

1.3 Solve  - Voter registration (sign up)

Add a Link for  Sign Up , in login.html
Submit it to voter_register.html(Already supplied in today's help.)
 Accept first name , last name , email , password , dob from user.
Submit the form to VoterRegistrationServlet
Validate user's age . In case of valid age(>21)  , use dao layer to insert a record in DB.
Already supplied  in UserDaoImpl.

In case of successful insertion , give a messgae n Add a link : Login Again ---> login.html

In case of failure  ,display failure message ,  Add a link : Back  ---> voter_registration.html

2. Complete JDBC assignment of DAO layer for

2.1  Get all candidates. 
2.2  Update Voting status
2.3  Increment candidate votes


Day 3

1. import eclipse project day3.1 in your workdpace
Edit DB settings from DBUtils class

1.1 Trace entire flow from login -logout , for voter

2. import eclipse project day3.2 in your workdpace
Edit DB settings from web.xml.
Use this web project , to revise 
ServletConfig n reading init parameters.
Pls look at modified 
2.1 DBUtils (openConnection , getConnection,closeConnnection)  
2.2 DAO classes

Hands on
3. MUST complete voter registration part today.
If required , refer - "day3-data\day3_help\voter registration help"

4. New OPTIONAL assignment (after you complete the voter registration)

Complete admin flow 
Refer to the flow diagram 
"case studies\voting assignment.png"

1. import day3.2 (it's a copy of day3.1)
 It uses ServletConfig n init params
What will you edit here ????
Any Java code OR web.xml ?
Revise
1.1 HttpSession API
1.2 Dynamic form generation
1.3 ServletConfig

2. complete 
2.1  Complete Voter registration
2.2  Complete admin flow (If time permits) or do it in the individual labs.

Day 4
No new assignments !
1. BUT you have to revise servlets including 
Servlet life cycle , including management of  concurrency(exec frmwork)
State management
Page Navigation 
Case study

2. import day4.1 , to revise 
Request dispatching with forward
(Differentiate between sendRedirect n forward)

3. import day4.2 , to revise 
Request dispatching with include
(mainly to differentiate between forward vs include)

4. import day4.3 (copied from day3' s case study) , to revise 
web app listeners.

5. import day4.4 , to look at 
JSP comments 
Revise 
JSP life cycle from the shared diagram 
JSP syntax (covered so far)

5. I will share optional assignment later , on the group 
(little more challenging !)

Day 5
1. import day5.1 , to revise
1.1 JSP scripting elements
1.2 EL syntax
1.3 URL rewriting
1.4 JSP directives

2. Hands on
Solve JSP basic assignment
refer - "day5-data\JSP basic assignment.png"
We have already solved it using client pull (clicking on links n redirect)

You modify it - to replace client pull by server pull
(i.e replace redirect by forward n then make the necessary changes)
O/P should be the same !

3. MANDATORY work , for hibernate (with lab faculty's help)
3.1 Download n extract template_projects , from g drive
3.2 Copy test_hibernate_basic , in the workspace.
3.3 import it as existing Maven app n then force update it.
(Steps already shown n discussed in theory session)
Every one MUST download hibernate dependencies , as Maven dependencies , today itself !









